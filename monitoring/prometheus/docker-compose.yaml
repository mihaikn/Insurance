version: "3"
services:
  python-application:
    build:
      context: ./python-application
    container_name: python-application
    image: python-application
    ports:
      - "5000:5000"
  python-application1:
    build:
      context: ./python-application
    container_name: python-application1
    image: python-application1
    ports:
      - "5001:5001"
  nginx:
    build:
      context: ./nginx
    container_name: nginx
    image: nginx
    ports:
      - "80:80"
    depends_on:
    - python-application
    - python-application1
    
  postgre:
    build:
      context: ./postgre
    container_name: postgre
    ports:
      - "5431:5432"
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=admin
      - POSTGRES_DB=programms
    image: postgres:14.3-alpine
  prometheus:
    container_name: prometheus-svc
    image: prom/prometheus
    ports: 
      - "9090:9090"
    command: --config.file=/etc/prometheus/prometheus.yaml
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
  grafana:
    image: grafana/grafana:5.0.4
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_BASIC_ENABLED=false
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
  grafana-dashboards:
    image: alpine:3.10
    depends_on:
      - grafana
    volumes:
      - ./grafana-data:/grafana
    command: >
      /bin/sh -c "
        apk add --no-cache curl
        echo 'waiting for grafana'
        sleep 5s
        cd /grafana
        curl --request POST http://grafana:3000/api/datasources --header 'Content-Type: application/json' -d @datasources.json
        curl --request POST http://grafana:3000/api/dashboards/db --header 'Content-Type: application/json' -d @dashboard.json"